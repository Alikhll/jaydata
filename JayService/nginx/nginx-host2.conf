
proxy_cache_path /var/tmp/cache levels=1:2 keys_zone=STATIC:10m inactive=24h  max_size=1g;

# default server, if no matching Host header or no Host header at all
server {
	server_name _ "";
	return 444;
}

map  $host  $appid  {
  default {{application.appID}};
 
{{#application.hosts}}
  {{.}} {{../application.appID}};
{{/application.hosts}}

{{#application.provision.applications}}
{{#hosts}}
  {{.}} {{../appID}};
{{/hosts}}
{{/application.provision.applications}}

}

map $dbnamewithguid $dbserver {
  default '{{json application.dataLayer.dbServer}}' ;
  ~^nodatabase '';

{{#application.dataLayer.databases}}
{{#if dbServer}}
  {{../name}}-{{../../application.appID}}            '{{json dbServer}}';
{{/if}}
{{/application.dataLayer.databases}}
{{#application.provision.applications}}
{{#if dataLayer.dbServer}}
  ~-{{../appID}}$            '{{json dataLayer.dbServer}}';
{{/if}}
{{/application.provision.applications}}

}

map $servicename $dbname {
{{#application.serviceLayer.services}}
{{#if database}}
  {{serviceName}} {{database}};
{{else}}
  {{serviceName}} 'nodatabase';
{{/if}}
{{/application.serviceLayer.services}}
}

{{#if limitedcors}}
# TODO egyelore kozos az app minden instance-an
map $http_origin $cors { 
  default "";
{{#application.firewall.outgress.allows}}
  {{address}}  {{address}};
{{/application.firewall.outgress.allows}}
}
{{/if}}

{{#unique application.serviceLayer.services}}
upstream nodejs-{{port}} {
	fair;
{{#if internalPort}}
server 127.0.0.1:{{internalPort}};
{{else}}
server 127.0.0.1:{{port}};
{{/if}}
}

server {
set $domain storm.jaystack.com;

# kozos az app minden istance-an
set $dbuser {{../application.processLogin}};
set $dbpwd {{../application.processPassword}};

        listen {{../ip}}:{{port}};
	server_name 
{{../application.appID}}.$domain
{{#../application.hosts}}
{{.}}
{{/../application.hosts}}
{{#../application.provision.applications}}
{{appID}}.$domain
{{#hosts}}
{{.}}
{{/hosts}}
{{/../application.provision.applications}}
;

{{#if ssl}}
        ssl on;
        ssl_certificate ssl/star_jaystack_net.crt;
        ssl_certificate_key ssl/star_jaystack_net.key;

        ssl_session_timeout 5m;

        ssl_protocols SSLv3 TLSv1;
        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
        ssl_prefer_server_ciphers on;
{{/if}}

	more_clear_headers Server X-Powered-By;

	location / {
    		proxy_pass       http://admin.storm.jaystack.com/%appid%;
    		proxy_set_header X-Real-IP $remote_addr;
		proxy_cache      STATIC;
		proxy_cache_valid 200 1d;
		proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
	}
        location ~ /([^/\?&]+).storm(.*)$ {
                set $servicename $1;
                set $dbnamewithguid $dbname-$appid;
                rewrite ^(.*)\.storm(.*)$ $1$2 break;
    		proxy_pass       http://nodejs-{{port}};
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-AppId $appid;
    		proxy_set_header X-Db-Server $dbserver;
    		proxy_set_header X-Db-User $dbuser;
    		proxy_set_header X-Db-Password $dbpwd;
{{#if limitedcors}}
                more_set_headers 'Access-Control-Allow-Origin: $cors';
{{else}}
                more_set_headers 'Access-Control-Allow-Origin: *';
{{/if}}
	}
}
{{/unique}}
